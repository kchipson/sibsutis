//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//???????????????                                      ????????????????
//?????              setfillstyle(4, 9); задний цвет?             ?????
//???????????????                                      ????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
//?????????????????????????????????????????????????????????????????????
#include <stdlib.h>
#include <iostream>
using namespace std;
#include <conio.h>
#include <graphics.h>
#include <ctime>


#define CHAG 20
#define r 1
#define dx 20


void ship(int x, int y,int zv=1){ 
/* ФУНКЦИЯ ОТРИСОВКИ КОРАБЛЯ
Принимает:
- Целое хначение x- координата в пикселях по оси Ох
- Целое хначение у- координата в пикселях по оси Оу	
- Булевая переменная zv(по умолчанию 1)- отрисовка или стирание корабля
	
*/ 
	int color,color1; // color- цвет границ, color1- цвет заливки
	if (zv!=1) color1=color=9; //Черный
	else color=1; //Синий

	setcolor (color); // установка цвета 
	
	// ОТРИСОВКА ДНИЩА
	moveto ( x, y ); // курсор в точку (x,y)
	lineto ( x, y+r*90); // мачта
	lineto ( x-75*r, y+r*90); // от мачты влево
	lineto ( x-75*r, y+r*125);  // от влево вниз
	lineto ( x+52*r, y+r*125);  // от вниз вправо
	lineto ( x+107*r, y+r*90);// от вправо угол
	lineto ( x, y+r*90);// от угол к мачте
	
	// ОТРИСОВКА ФЛАГА
	lineto ( x, y+r*70);  // от мачты к нач точке
	lineto ( x-52*r, y+r*70); // от нач точки к лев низ
	lineto ( x-52*r, y+r*20); // от лев низ к лев верх
	lineto ( x+72*r, y+r*20); // от лев верх к крайний прав верх
	lineto ( x+52*r, y+r*20);// от крайний прав верх к прав верх
	lineto ( x+52*r, y+r*70); // от прав верх к прав низ
	lineto ( x, y+r*70);// от прав низ к мачте
	
	// Закраска днища
	if (zv==1) color1=6; //Коричневый
	setfillstyle ( 1, color1 );
	floodfill ( x, y+r*90+1,color);
		
	// Закраска паруса
	if (zv==1) color1=15; //Белый
	setfillstyle (1, color1 );
	floodfill ( x-1, y+r*70-1,color);	 // заливка лев паруса
	floodfill ( x+1, y+r*70-1,color);	 // заливка прав паруса
	
}


void one(){ 
	//5.	Движение с изменяющимся углом (dx - const, dy - variable) с отражением от границ экрана
	
	int d=GetSystemMetrics(SM_CXSCREEN),ch=GetSystemMetrics(SM_CYSCREEN)-60; 
	// d- длина окна graphics(длина экрана), ch- ширина окна graphics(высота экрана- размер панели задач)
	
	int dy;
	int koefx,koefy; // изменение по х и у 
	
	initwindow (d, ch); // открыть окно для графики
	setfillstyle(1, 9); // сплошная заливка экрана
	bar (0, 0, d, ch); // заливаем экран
	
	setfillstyle(1, 0);// стандартные значания
	int x=d/2,y=ch/2,k; // стандартные значания коодинат(середина окна)
	bool f=1;  // переменная для закрытия 1 задачи
	
	dy=rand() % ch; // рандомное задание dy

	koefy=(dy/((dy-y)/CHAG));
	koefx= (dx/(dx/CHAG));
	
	ship(x,y); // отрисовка корабля
		
	while (f){
		delay(100); // задержка во избежании эпилепсии 
	    if ( _kbhit() ) // если нажата клавиша…
	       if ( _getch() == 27 ){  // если нажата Esc
	       		closegraph();
				f=0;	
	  		}	  		
	  	ship(x,y,0);  // стирание корабля
		x= x+koefx;
		y= y+koefy;
	
		if(y+r*125>ch) { //если встречен низ
			y=ch-r*138;
			ship(x,y); // отрисовка корабля
			koefy=-koefy;
		}
		
		else if(y<0) { //если встречен верх
			y=0;
			ship(x,y); // отрисовка корабля
			koefy=-koefy;
		}
		
		else  if(x-75*r<0) { //если встречен лево
			x=75*r;
			ship(x,y); // отрисовка корабля
			koefx=-koefx;
				
		}
	
		else if(x+107*r>d) { //если встречено право
			x=d-115*r;
			ship(x,y); // отрисовка корабля
			koefx=-koefx;			
		}
		
		else ship(x,y); // отрисовка корабля
	}
} 


void two(){ 	
	//3.	Управление клавишами с цифрами 4, 6, 8, 2.	
	
	int d=GetSystemMetrics(SM_CXSCREEN),ch=GetSystemMetrics(SM_CYSCREEN)-60; 
	// d- длина окна graphics(длина экрана), ch- ширина окна graphics(высота экрана- размер панели задач)
	
	initwindow (d, ch); // открыть окно для графики
	setfillstyle(1, 9); // сплошная заливка экрана
	bar (0, 0, d, ch); // заливаем экран
	setfillstyle(1, 0);// стандартные значания
	
	int x=d/2,y=ch/2;
	int k; // код нажатой клавиши
	bool f=1; // переменная для закрытия 2 задачи
	
	ship(x,y);  // отрисовка корабля
	
	while (f){
		k=_getch();// ждем нажатия клавиши
		ship(x,y,0);  // стирание корабля
        switch(k){
			case 52:// при нажатии ЧЕТЫРЕ
				{
		            x-=CHAG;
		            if(x-75*r<0) x=75*r; // ограничение выхода за экран
		            ship(x,y); // отрисовка корабля           
					break;
				}
			
			case 54:// при нажатии 6
	            {
	            
	            x+=CHAG;
	            if(x+107*r>d) x=d-115*r;  // ограничение выхода за экран
	            ship(x,y); // отрисовка корабля
				break;
				}
			case 50:// при нажатии 2
	            {
	            ship(x,y,0);
	            y+=CHAG;
	            if(y+r*125>ch) y=ch-r*138;  // ограничение выхода за экран
	            ship(x,y); // отрисовка корабля
				break;
				}
			case 56:// при нажатии 8
	            {
	            ship(x,y,0);
	            y-=CHAG;
	            if(y<0) y=0;  // ограничение выхода за экран
	            ship(x,y); // отрисовка корабля
				break;
				}
			case 27: // при нажатии Esc
	            {
	            closegraph();
				f=0;	
				break;		
				}
			default:
				{
					ship(x,y);
				}

		}
		
	}
} 

void three(){ 
	exit(0); // завершение программы 

} 

void menu(int choice){
/* ФУНКЦИЯ ДЛЯ МЕНЮ
Принимает:
- Целое хначение choice- выбор необходимой программы
*/ 
    	system("CLS");  // очистка консоли
    	if(choice==1){
    		cout<<"\n     ************************************************\n";
			cout<<"     *                                              *\n";
			cout<<"     *         1. Свободное движение объекта        *\n";
			cout<<"     *                                              *\n";
    		
		}
		else{
			cout<<"                                                     \n";
			cout<<"                                                     \n";
			cout<<"                                                     \n";
			cout<<"               1. Свободное движение объекта         \n";
			cout<<"                                                     \n";
			cout<<"                                                     \n";		
		}


    	if(choice==1||choice==2)
    	  	cout<<"     ************************************************\n";
	    
	    
    	if(choice==2)
    	{
			cout<<"     *                                              *\n";
			cout<<"     *   2. Движение объекта с помощью клавиатуры   *\n";
			cout<<"     *                                              *\n";
		}
		
    	else
    	{
    		cout<<"                                                     \n";
			cout<<"                                                     \n";
			cout<<"         2. Движение объекта с помощью клавиатуры    \n";
			cout<<"                                                     \n";
			cout<<"                                                     \n";
		}

  		if(choice==2||choice==3)
			cout<<"     ************************************************\n";
			
			
		if(choice==3){
		cout<<"     *                                              *\n";
		cout<<"     *            3. Выход из программы             *\n";
		cout<<"     *                                              *\n";
		cout<<"     ************************************************\n";
		}
		else{
		cout<<"                                                     \n";
		cout<<"                                                     \n";
		cout<<"                  3. Выход из программы              \n";
		cout<<"                                                     \n";	
		cout<<"                                                     \n";
		}
	}

main(){ 
	srand(time(NULL)); // srand от времени
    int choice=1; // выбор
    int flag=0;// предотвращение запуска нескольких окон
    
	menu(choice); 
	
    while (1){
        switch(_getch()){ // ждем нажатия клавиши
			case 224: //нажатие стрелочек
	            {
				switch(_getch()){
		                    case 72: {choice--;break;}  //нажатие стрелочки вверх
		                    case 80: choice++;  //нажатие стрелочки вниз
	                	}      
						  	
				if(choice==4) choice=1; //круговое возвращение
				if(choice==0) choice=3; //круговое возвращение
				menu(choice); //перепись меню
				break;
				}
			case 13: //нажатие Enter
	            {	
	            	if (flag){ //предотвращение запуска нескольких окон
						closegraph(); // закрываем графическое окно
					}
					flag=1;	            	
					if(choice==1)  //запуск 1 задачи
					{
						one();
						flag=0;	
					}
					else if(choice==2)   //запуск 2 задачи
					{
						two(); 
						flag=0;	
					}
					else if(choice==3) three();  //запуск 3 задачи
				}
				
		}		
	} 
}


