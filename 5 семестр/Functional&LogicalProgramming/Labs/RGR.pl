% Автор kchipson
% Дата 13.11.2020

/*
 1. Списки (списки вводятся с клавиатуры во время выполнения программы)
1.13. Удалите из списка все вхождения элемента X.*/


del([], _, []).

del([H|T], H, Res) :- 
    !, 
    del(T, H, Res).

del([H|T], X, [H|Res]) :-
    del(T, X, Res).

print_del :-
    format('~n~t~w~t~85~n~n~t~w~t~85~n~`t~85', ['1. Списки (списки вводятся с клавиатуры во время выполнения программы)','1.13. Удалите из списка все вхождения элемента X.']),
    format('~nВведите список  ~n'), read(List),
    format('~nВведите удаляемый элемент ~n'), read(D),
	del(List, D, List_new), format('~nРезультат ~n~t~w~n',[List_new]).

t1 :- print_del.

/*
 2. Строки, файлы
2.13. Переставьте строки текстового файла в обратном порядке. Сформируйте новый файл.
% reverseLinesOfFile(Input, Output) -
*/

reverseLinesOfFile(In, Out) :-
    repeat,
    read_line_to_string(In, S),
    (S == end_of_file, !;
    reverseLinesOfFile(In, Out),
    writeln(Out, S), fail).

print_reverseLinesOfFile :-
    format('~n~t~w~t~85~n~n~t~w~t~85~n~`t~85', ['2. Строки, файлы','2.13. Переставьте строки текстового файла в обратном порядке. Сформируйте новый файл.']),
    format('~nВведите название входного файла (Файл должен находиться в директории программы и иметь расширение .txt) ~n'), read(I),
    format('~nВведите название выходного файла (Файл будет находиться в директории программы и иметь расширение .txt) ~n'), read(O),
    concat(I, '.txt', Input),
    concat(O, '.txt', Output),
    open(Input, read, In),
    open(Output, write, Out),
    reverseLinesOfFile(In, Out),
    close(In),
    close(Out).

t2 :- print_reverseLinesOfFile.


/* 3. Динамические базы данных

Напишите программу для работы с базой данных по заданию. Начальная база данных
должна храниться в файле базы данных. В программе должно присутствовать меню из
5 пунктов, реализующих следующие возможности:
− просмотр содержимого базы данных;
− добавления записи (за один вход в этот пункт должна быть возможность добавления
нескольких записей);
− удаления записи (за один вход в этот пункт должна быть возможность удаления
нескольких записей);
− выполнения запроса к базе данных по заданию;
− выход из программы с сохранением содержимого базы данных в файл базы данных.

3.13. Создайте базу данных об игрушках: название, стоимость. Получите названия
наиболее дешевых игрушек (цены которых отличаются от самой дешевой не более
чем на 100 рублей).*/

/*
██████████
█─██─█───█
█─██─█─███
█────█───█
█─██─█─███
█─██─█───█
██████████
████████████████████████████████████
█────██───██───███──█────█─██─█────█
█─██─██─█─██─████─█─█─██─█─██─█─██─█
█─█████─█─██───█─██─█────█────█────█
█─██─█─────█─███─██─█─██─█─██─█─██─█
█────█─███─█───█─██─█─██─█─██─█─██─█
████████████████████████████████████
*/
% :-dynamic toy/2.

action(1) :- listing(toy), !, fail.

add_toy() :-
    repeat, 
    format('~nВведите название игрушки: ~n'), read(Name),
    format('~nВведите стоимость: ~n'), read(Cost),
    assertz(toy(Name, Cost)),
    format('~nПродолжить добавление? (Введите \'y\' если да, иначе - введите любое значение)~n'), read(Confirmation),
    Confirmation \== 'y', ! ; add_toy().

action(2) :- 
    format('~n~n~n~tДобавление элементов~t~85|~n~`*t~85|'),
    add_toy(), !, fail.

action(3) :- !, fail.

action(4) :- !, fail.

action(5) :- !, true.

action(_) :- format('~n~t~w~t~18|~n~t~w~t~18|~n~t~w~t~18|~n~n~n~n',['[ERROR]', 'Некорректный ввод!', 'Повторите попытку']), fail.

menu :- 
    repeat,
    format('~n~w~n~w~n~w~n~w~n~w~n~w~n', ['1. Просмотр содержимого базы данных', '2. Добавление записей', '3. Удаление записей','4. Названия наиболее дешевых игрушек (цены которых отличаются от самой дешевой не более чем на 100 рублей)', '5. Выход (с сохранением базы)', 'Ваш выбор :']),
    read(X),
    format('~n~n'),
    action(X).

t3 :-
    format('~n~t~w~t~85|~n~n~w~n~w~n~w~n~w~n~w~n~w~n~w~n~w~n~w~n~w~n~n~w~n~w~n~w~n~`*t~85|', ['3. Динамические базы данных','Напишите программу для работы с базой данных по заданию. Начальная база данных', 'должна храниться в файле базы данных. В программе должно присутствовать меню из', '5 пунктов, реализующих следующие возможности:', '− просмотр содержимого базы данных;', '− добавления записи (за один вход в этот пункт должна быть возможность добавления', 'нескольких записей);', '− удаления записи (за один вход в этот пункт должна быть возможность удаления', 'нескольких записей);', '− выполнения запроса к базе данных по заданию;', '− выход из программы с сохранением содержимого базы данных в файл базы данных.', '3.13. Создайте базу данных об игрушках: название, стоимость. Получите названия', 'наиболее дешевых игрушек (цены которых отличаются от самой дешевой не более', 'чем на 100 рублей).']),
    consult('RGR_DataBase.pl'),
    menu.
