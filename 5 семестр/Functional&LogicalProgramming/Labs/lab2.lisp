;;; Каждая бригада должна выполнить 3 задачи (номера выбираются из таблицы). В теле
;;; функции использование операторов set, let и setq не допускается! Все функции должны
;;; быть рекурсивными, функционалы не использовать.
;;; Бригада №6: 6, 16, 26

(format t "~%#####################################~%#             Бригада #6            #~%#####################################~%~%~%")


;; 6) Строящую список "луковица" с уровнем вложенности n для параметра x.
;; Например, n=4, x=* –> ((((*))))
(format t "Определите функцию:~%6) Строящую список \"луковица\" с уровнем вложенности n для параметра x.~%Результат:~%")
(defun onion (x n)
    (if (eql n 0) 
        x 
        (list (onion x (- n 1)))
    )
)
(setq x "*")
(setq n 4)
(format t "   x=~A, n=~A -> ~A~%" x n (onion x n))
(format t "~%~%")


;; 16) Осуществляющую циклический сдвиг в списке L на n элементов вправо.
;; Например, L = (a s d f g), n = 3 –> (d f g a s)
(format t "Определите функцию:~%16) Осуществляющую циклический сдвиг в списке L на n элементов вправо.~%Результат:~%")
(defun cyclicShift (L n)
    (if (eql n 0) 
        L 
        (cyclicShift (append (last L) (butlast L)) (- n 1))
    )
)
(setq L '(d f g a s))
(setq n 3)
(format t "   L=~A, n=~A -> ~A~%" L n (cyclicShift L n))
(format t "~%~%")


;; 26) Вычисляющую количество атомов в списочной структуре (на всех уровнях).
;; Например, ((a b) c ((d a v))) –> 6
(format t "Определите функцию:~%26) Вычисляющую количество атомов в списочной структуре (на всех уровнях).~%Результат:~%")
(defun numAtoms (L)
    (if (not (null L))
        (+ 
        (if (consp (CAR L))
            (numAtoms(CAR L))
            1
        )
        (numAtoms (CDR L))
        )
        0
    )
)
(setq L '((a b) c ((d a v))))
(format t "   L=~A -> ~A~%" L (numAtoms L))
(format t "~%~%")
